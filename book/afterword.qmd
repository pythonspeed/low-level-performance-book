# Afterword

## Write code that's fast from the start

Adding speed to your code after it's written is possible, but you can do better.

To begin with, once you understand the various bottlenecks in your computer and the techniques to avoid them, you can write code that will be faster by default.
You know you want to iterate over values in an array in the order they're stored in memory, so why not do it from the start?
You know that $O(n^2)$ algorithms are bad, so why not look for a better algorithm from the start?

But beyond that, speed should be part of how you design the architecture of your software.
If you start with speed as a requirement, you may end up with a very different design that would be difficult or impossible to retrofit.
A particularly impressive example is [`simdjson`](https://arxiv.org/abs/1902.08318), a JSON parsing library whose parsing technique, based on SIMD instructions, is quite different from other JSON parsers.
As a result, it is far faster.


Finally, I'd love to hear from you—[send me an email](mailto:itamar@pythonspeed.com) and share your thoughts.

—Itamar Turner-Trauring, Cambridge MA, USA
